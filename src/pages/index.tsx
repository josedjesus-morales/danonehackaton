/* eslint-disable @next/next/no-img-element */
import { FC } from "react";
import Head from "next/head";
import { Inter } from "next/font/google";
import Box from "../components/atoms/Box/index";
import Title from "../components/atoms/Title/index";
import Text from "../components/atoms/Text/index";
import Button from "../components/atoms/Button/index";
import Image from "next/image";
import Header from "../components/Header/header";
import Footer from "../components/Footer/footer";
import { GraphQLClient } from "graphql-request";
import { getPages } from "../queries/pages";
import { getUsers } from "@/queries/users";
import styled, { css } from "styled-components";


const inter = Inter({ subsets: ["latin"] });


const BoxWrapper = styled(Box)(
    ({ theme }) => css`
        background-color: ${theme.colors.Interaction};
        display:flex;
        justify-content: space-around;
        align-items: center;
        flex-direction: column;
        padding: 2rem;
        min-height: 300px;
    `,
);

const Home: FC<{
  // grid: {
  //   items: {
  //     title: string;
  //     description: string;
  //   }[];
  // };
  // stack: {
  //   items: {
  //     title: string;
  //     description: string;
  //   }[];
  // };
}> = () => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header/>
      <main >
      <Image
        src="/recipes.png"
        width={1440}
        height={370}
        alt="recipes"
      />
      <BoxWrapper>
        <Title as="h2">Keep track of your daily calorie limit!</Title>
        <Text size={18}>Tell us your maximum daily calorie intake and we will recommend the products that best suit your goals!</Text>
        <Button variant="Outline">Start now</Button>
      </BoxWrapper>
      </main>
      <Footer/>
    </>
  );
};

export const getServerSideProps = async () => {
  const hygraph = new GraphQLClient(
    process.env.NEXT_PUBLIC_HYGRAPH_API_URL || "",
    {
      headers: {
        authorization: process.env.NEXT_PUBLIC_HYGRAPH_API_TOKEN || "",
      },
    }
  );

  const data = await hygraph.request(getPages());
  console.log(data);
  const userData = await hygraph.request(getUsers());
  console.log(userData);

  return {
    props: {
    },
  };
};

export default Home;